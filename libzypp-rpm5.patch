--- libzypp-14.36.0/zypp/target/rpm/BinHeader.h.orig	2015-02-09 16:07:05.000000000 +0100
+++ libzypp-14.36.0/zypp/target/rpm/BinHeader.h	2015-02-17 20:28:45.204574339 +0100
@@ -110,7 +110,7 @@
 {
   public:
     intList()
-      : _type( RPM_NULL_TYPE )
+      : _type( static_cast<rpmTagType>(RPM_NULL_TYPE) )
     {}
 
     bool empty() const
--- libzypp-14.36.0/zypp/target/rpm/BinHeader.cc.orig	2015-02-09 16:07:05.000000000 +0100
+++ libzypp-14.36.0/zypp/target/rpm/BinHeader.cc	2015-02-17 20:28:45.204574339 +0100
@@ -10,6 +10,9 @@
  *
 */
 #include "librpm.h"
+#ifdef _RPM_5
+#include <rpm46compat.h>
+#endif
 extern "C"
 {
 #ifdef _RPM_5
--- libzypp-14.36.0/zypp/target/rpm/librpm.h.orig	2015-02-09 16:07:05.000000000 +0100
+++ libzypp-14.36.0/zypp/target/rpm/librpm.h	2015-02-18 18:24:23.831261616 +0100
@@ -15,6 +15,8 @@
 #ifdef _RPM_5
 // needs to be outside 'extern "C"'
 #include <rpm/rpm4compat.h>
+#define _RPMVSF_NOSIGNATURES (RPMVSF_NODSAHEADER | RPMVSF_NORSAHEADER | RPMVSF_NODSA | RPMVSF_NORSA)
+#define	_RPMVSF_NODIGESTS (RPMVSF_NOSHA1HEADER | RPMVSF_NOMD5HEADER | RPMVSF_NOSHA1 | RPMVSF_NOMD5)
 #endif // _RPM_5
 
 extern "C"
--- libzypp-14.36.0/zypp/target/rpm/librpmDb.cc.orig	2015-02-09 16:07:05.000000000 +0100
+++ libzypp-14.36.0/zypp/target/rpm/librpmDb.cc	2015-02-18 19:50:12.301045536 +0100
@@ -101,7 +101,7 @@
   {
     if ( _ts )
     {
-      ::rpmtsFree(_ts);
+      rpmtsFree(_ts);
     }
   }
 };
@@ -597,7 +597,7 @@
   {
     if ( ! create( RPMDBI_PACKAGES ) )
       return false;
-#ifdef RPMFILEITERMAX	// since rpm.4.12
+#if defined(_RPM_5) || defined(RPMFILEITERMAX) // since rpm.4.12
     ::rpmdbAppendIterator( _mi, (const unsigned *)&off_r, 1 );
 #else
     ::rpmdbAppendIterator( _mi, &off_r, 1 );
--- libzypp-17.18.0/zypp/target/rpm/RpmDb.cc.orig	2019-12-06 20:32:29.739774140 +0100
+++ libzypp-17.18.0/zypp/target/rpm/RpmDb.cc	2019-12-06 20:33:49.202676985 +0100
@@ -1562,7 +1562,7 @@
 #ifdef HAVE_NO_RPMTSSETVFYFLAGS
     // Legacy: In rpm >= 4.15 qva_flags symbols don't exist
     // and qva_flags is not used in signature checking at all.
-    qva.qva_flags = (VERIFY_DIGEST|VERIFY_SIGNATURE);
+    qva.qva_flags = rpmQueryFlags(VERIFY_DIGEST|VERIFY_SIGNATURE);
 #else
     ::rpmtsSetVfyFlags( ts, RPMVSF_DEFAULT );
 #endif
